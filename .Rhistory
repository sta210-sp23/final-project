tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
`2023sr` <- read_csv("data/2023sportsreference.csv")
`2023analytics` <- read_csv("data/2023torvik.csv")
`2023stats` <- left_join(`2023analytics`, `2023sr`, by = c("TEAM" = "School"))
`2023teams` <- read_csv("data/2023teams.csv")
`2023stats` <- `2023stats` |>
filter(`2023stats`$TEAM %in% `2023teams`$TEAM)
tibble(predict(round_64_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(round_64_model, `2023stats`)))
tibble(predict(round_32_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(round_32_model, `2023stats`)))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
count(cbb, Year)
count(cbb, YEAR)
2022-2008+1
<<<<<<< HEAD
View(round_64)
View(round_64)
View(round_64_max)
View(round_64)
`2023sr` <- read_csv("data/2023sportsreference.csv")
library(tidyverse)
library(tidymodels)
library(Stat2Data)
library(caret)
library(leaps)
library(MASS)
`2023sr` <- read_csv("data/2023sportsreference.csv")
`2023analytics` <- read_csv("data/2023torvik.csv")
`2023stats` <- left_join(`2023analytics`, `2023sr`, by = c("TEAM" = "School"))
`2023teams` <- read_csv("data/2023teams.csv")
`2023stats` <- `2023stats` |>
filter(`2023stats`$TEAM %in% `2023teams`$TEAM)
tibble(predict(round_64_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(round_64_model, `2023stats`)))
tibble(predict(round_32_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(round_32_model, `2023stats`)))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "prob"))
arrange(predict(mmb_ord_model, `2023stats`, type = "prob"))
tibble(predict(mmb_ord_model, `2023stats`))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`, type = "prob"))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
`2023sr` <- read_csv("data/2023sportsreference.csv")
`2023analytics` <- read_csv("data/2023torvik.csv")
`2023stats` <- left_join(`2023analytics`, `2023sr`, by = c("TEAM" = "School"))
`2023teams` <- read_csv("data/2023teams.csv")
`2023stats` <- `2023stats` |>
filter(`2023stats`$TEAM %in% `2023teams`$TEAM)
tibble(predict(round_64_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(round_64_model, `2023stats`)))
tibble(predict(round_32_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(round_32_model, `2023stats`)))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`))
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
=======
>>>>>>> 6e2641c4d4884737b8e305710f57ee46b95fbb08
>>>>>>> 3a8a767835d780a86f2b1382a7a19488f2d51d86
>>>>>>> d702ec47b09c17ceab3c27c48d100677c6173d65
?labs
??labs
cbb <- cbb |>
mutate(mm_WINS = case_when(march_madness == "R64" ~ 0, march_madness =="R32" ~ 1,
march_madness == "E16" ~ 2, march_madness == "E8" ~ 3,
march_madness == "F4" ~ 4, march_madness == "2ND" ~ 5,
march_madness == "Champions" ~ 6, TRUE ~ 0))
cbb <- cbb |>
mutate(mm_WINS = case_when(march_madness == "R64" ~ 0, march_madness =="R32" ~ 1,
march_madness == "E16" ~ 2, march_madness == "E8" ~ 3,
march_madness == "F4" ~ 4, march_madness == "2ND" ~ 5,
march_madness == "Champions" ~ 6, TRUE ~ 0))
?scale_color_manual
??scale_color_manual
install.packages("gridExtra")
cbb <- cbb |>
mutate(mm_WINS = case_when(march_madness == "R64" ~ 0, march_madness =="R32" ~ 1,
march_madness == "E16" ~ 2, march_madness == "E8" ~ 3,
march_madness == "F4" ~ 4, march_madness == "2ND" ~ 5,
march_madness == "Champions" ~ 6, TRUE ~ 0))
library(tidyverse)
library(tidymodels)
library(Stat2Data)
library(caret)
library(leaps)
library(MASS)
library(gridExtra)
cbb <- read_csv("data/20082022torvik.csv")
sportsreference <- read_csv("data/sportsreference.csv")
background <- read_csv("data/teams_background.csv")
cbb <- left_join(cbb, background, by = c("TEAM" = "TEAM", "YEAR" = "YEAR"))
#Remove non-postseason teams and R68 losers
cbb <- cbb[!is.na(cbb$march_madness),]
cbb <- filter(cbb, !grepl("R68", march_madness))
#Cleaning up variable names, variables, etc
cbb$march_madness <- str_trim(cbb$march_madness, side = c("both"))
cbb <- rename(cbb, march_madness = march_madness)
cbb <- cbb |>
mutate(march_madness = case_when(
march_madness == "Sweet Sixteen" ~ "S16",
march_madness == "Elite Eight" ~ "E8",
march_madness == "Final Four" ~ "F4",
march_madness == "Finals" ~ "2ND",
march_madness == "CHAMPS" ~ "Champions",
TRUE ~ march_madness
))
cbb <- left_join(cbb, sportsreference, by = c("TEAM" = "School", "YEAR" = "Year"))
cbb <- cbb |>
mutate(mm_WINS = case_when(march_madness == "R64" ~ 0, march_madness =="R32" ~ 1,
march_madness == "E16" ~ 2, march_madness == "E8" ~ 3,
march_madness == "F4" ~ 4, march_madness == "2ND" ~ 5,
march_madness == "Champions" ~ 6, TRUE ~ 0))
#separated each row by round for determining differences
cbb_r <- mutate(cbb, round_64 = if_else(march_madness == "R64", FALSE, TRUE))
round_64 <- cbb_r
cbb_r <- mutate(cbb_r, round_32 =
case_when(march_madness == "R32" ~ FALSE,
march_madness %in% c("S16", "E8", "F4", "2ND", "Champions") ~ TRUE,
TRUE ~ NA))
round_32 <- cbb_r[!is.na(cbb_r$round_32),]
cbb_r <- mutate(cbb_r, sweet_sixteen =
case_when(march_madness == "S16" ~ FALSE,
march_madness %in% c("E8", "F4", "2ND", "Champions") ~ TRUE,
TRUE ~ NA))
sweet_sixteen <- cbb_r[!is.na(cbb_r$sweet_sixteen),]
cbb_r <- mutate(cbb_r, elite_eight =
case_when(march_madness == "E8" ~ FALSE,
march_madness %in% c("F4", "2ND", "Champions") ~ TRUE,
TRUE ~ NA))
elite_eight <- cbb_r[!is.na(cbb_r$elite_eight),]
cbb_r <- mutate(cbb_r, final_four =
case_when(march_madness == "F4" ~ FALSE,
march_madness %in% c("2ND", "Champions") ~ TRUE,
TRUE ~ NA))
final_four <- cbb_r[!is.na(cbb_r$final_four),]
cbb_r <- mutate(cbb_r, champ_game =
case_when(march_madness == "2ND" ~ FALSE,
march_madness %in% c("Champions") ~ TRUE,
TRUE ~ NA))
champ_game <- cbb_r[!is.na(cbb_r$champ_game),]
cbb <- cbb |>
mutate(mm_WINS = case_when(march_madness == "R64" ~ 0, march_madness =="R32" ~ 1,
march_madness == "E16" ~ 2, march_madness == "E8" ~ 3,
march_madness == "F4" ~ 4, march_madness == "2ND" ~ 5,
march_madness == "Champions" ~ 6, TRUE ~ 0))
cbb <- cbb |>
mutate(big_6 = case_when(Conference %in% c("SEC", "P12", "BE", "B10", "B12", "ACC") ~ TRUE,
TRUE ~ FALSE))
grid.arrange(ggplot(cbb, aes(y = Conference, x = mm_WINS, fill = big_6)) +
geom_col() +
theme(legend.position = "none") +
scale_fill_manual(values = c("gray", "red")) +
labs(
x = "Conference",
y = "Wins",
title = "Major Conferences Dominate Wins in March Madness"
),
cbb |>
subset(select = c(ADJOE, ADJDE, TOR, TORD, `ADJ T`, `EFG%`, march_madness)) |>
group_by(march_madness) |>
summarize(ADJOE = mean(ADJOE),
ADJDE = mean(ADJDE),
TOR = mean(TOR),
TORD = mean(TORD),
ADJT = mean(`ADJ T`),
`EFG%` = mean(`EFG%`)) |>
pivot_longer(cols = c(ADJOE, ADJDE, TOR, TORD, ADJT, `EFG%`)) |>
subset(march_madness %in% c("R64", "S16", "F4", "Champions")) |>
ggplot(aes(x = name, y = value, fill = march_madness)) +
geom_col(position = "dodge") +
labs(
title = "Round-Wise Stats Trends for March Madness",
x = "Key Variable",
y = "Average by Round",
fill = "March Madness Round"
),
nrow = 1)
?emplogitplot1
grid.arrange(emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model"),
emplogitplot1(round_32 ~ ADJDE, data = round_32, ngroups = 10,
main = "Example Linearity for Round of 32 Model"),
emplogitplot1(sweet_sixteen ~ TORD, data = sweet_sixteen, ngroups = 10,
main = "Example Linearity for Sweet Sixteen Model"),
nrow = 1)
?grid.arrange
?emplogitplot1
plot1 <- emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model")
plot2 <- emplogitplot1(round_32 ~ ADJDE, data = round_32, ngroups = 10,
main = "Example Linearity for Round of 32 Model")
plot3 <- emplogitplot1(sweet_sixteen ~ TORD, data = sweet_sixteen, ngroups = 10,
main = "Example Linearity for Sweet Sixteen Model")
layoutmatrix((1:3, nrow = 1))
plot1 <- emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model")
plot2 <- emplogitplot1(round_32 ~ ADJDE, data = round_32, ngroups = 10,
main = "Example Linearity for Round of 32 Model")
plot3 <- emplogitplot1(sweet_sixteen ~ TORD, data = sweet_sixteen, ngroups = 10,
main = "Example Linearity for Sweet Sixteen Model")
layout(matrix(1:3, nrow = 1))
plot1 <- emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model")
plot2 <- emplogitplot1(round_32 ~ ADJDE, data = round_32, ngroups = 10,
main = "Example Linearity for Round of 32 Model")
plot3 <- emplogitplot1(sweet_sixteen ~ TORD, data = sweet_sixteen, ngroups = 10,
main = "Example Linearity for Sweet Sixteen Model")
layout(matrix(1:3, nrow = 1))
plot1
plot2
plot3
plot1 <- emplogitplot1(data = my_data, x = my_x, y = my_y1)
plot1 <- emplogitplot1(data = my_data, x = my_x, y = my_y1)
# Place the plots side-by-side using layout() function
layout(matrix(1:2, nrow = 1), widths = c(0.5, 0.5))
layout.show(2)  # Show the layout
plot.new()  # Create new plotting region for layout
# Add the plots to the layout
plot1_width <- sum(grobWidth(plot1))
emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model")
emplogitplot1(round_32 ~ ADJDE, data = round_32, ngroups = 10,
main = "Example Linearity for Round of 32 Model")
emplogitplot1(sweet_sixteen ~ TORD, data = sweet_sixteen, ngroups = 10,
main = "Example Linearity for Sweet Sixteen Model")
emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model")
emplogitplot1(round_32 ~ ADJDE, data = round_32, ngroups = 10,
main = "Example Linearity for Round of 32 Model")
emplogitplot1(sweet_sixteen ~ TORD, data = sweet_sixteen, ngroups = 10,
main = "Example Linearity for Sweet Sixteen Model")
emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model")
#| layout-ncol: 3
emplogitplot1(round_64 ~ ADJOE, data = round_64, ngroups = 10,
main = "Example Linearity for Round of 64 Model")
#| layout-ncol: 3
emplogitplot1(sweet_sixteen ~ TORD, data = sweet_sixteen, ngroups = 10,
main = "Example Linearity for Sweet Sixteen Model")
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
predict(mmb_ord_model, `2023stats`, type = "probs")
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
predict(mmb_ord_model, `2023stats`, type = "probs") |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
predict(mmb_ord_model, `2023stats`, type = "probs") |>
left_join(`2023stats`)
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
predict(mmb_ord_model, `2023stats`, type = "probs") |>
left_join(`2023stats`)
predict(mmb_ord_model, `2023stats`, type = "probs")
predict(mmb_ord_model, `2023stats`, type = "probs") |>
left_join(`2023stats`)
`2023stats`
predict(mmb_ord_model, `2023stats`, type = "probs")
predict(mmb_ord_model, `2023stats`, type = "probs") |>
mutate(rank = seq(1:64))
predict(mmb_ord_model, `2023stats`, type = "probs")
array(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64))
predict(mmb_ord_model, `2023stats`, type = "probs")
tibble(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64))
tibble(predict(mmb_ord_model, `2023stats`)) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(predict(mmb_ord_model, `2023stats`, type = "probs"))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
pls_work <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
View(pls_work)
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs
ordinal_probs
View(pls_work)
View(ordinal_probs)
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$predict(mmb_ord_model, `2023stats`, type = "probs")
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$predict(mmb_ord_model, `2023stats`, type = "probs")
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$predict(mmb_ord_model, `2023stats`, type = "probs")[,"R64"]
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$predict(mmb_ord_model, `2023stats`, type = "probs")[,"R64"]
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$predict(mmb_ord_model, `2023stats`, type = "probs")[,"R64"]
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM))
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, \`2023stats\`, type = "probs")`[2:7]))
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = "probs")`[2:7]))
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = "probs")[2:7]))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = "probs")[1]))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = "probs")))
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = "probs")))
colnames(ordinal_probs)
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = "probs")))
ordinal_probs <- tibble(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = \"probs\")))
?tibble
ordinal_probs <- as.data.frame(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
right_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs |>
subset(select = c(TEAM, predict(mmb_ord_model, `2023stats`, type = \"probs\")))
ordinal_probs
ordinal_probs <- as.data.frame(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
apply(ordinal_probs, 3, round, digits = 3)
ordinal_probs <- as.data.frame(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
apply(ordinal_probs, 2, round, digits = 3)
ordinal_probs <- as.data.frame(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
apply(ordinal_probs, 2, round, digits = 3)
ordinal_probs <- as.data.frame(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$R64 <- round(ordinal_probs$R64, 3)
ordinal_probs$R32 <- round(ordinal_probs$R32, 3)
ordinal_probs$S16 <- round(ordinal_probs$S16, 3)
ordinal_probs$E8 <- round(ordinal_probs$E8, 3)
ordinal_probs$F4 <- round(ordinal_probs$F4, 3)
ordinal_probs$2ND <- round(ordinal_probs$2ND, 3)
ordinal_probs <- as.data.frame(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$R64 <- round(ordinal_probs$R64, 3)
ordinal_probs$R32 <- round(ordinal_probs$R32, 3)
ordinal_probs$S16 <- round(ordinal_probs$S16, 3)
ordinal_probs$E8 <- round(ordinal_probs$E8, 3)
ordinal_probs$F4 <- round(ordinal_probs$F4, 3)
ordinal_probs$`2ND` <- round(ordinal_probs$`2ND`, 3)
ordinal_probs$Champions <- round(ordinal_probs$Champions, 3)
apply(ordinal_probs, 2, , digits = 3)
ordinal_probs <- as.data.frame(predict(mmb_ord_model, `2023stats`, type = "probs")) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64)))
ordinal_probs$R64 <- round(ordinal_probs$R64, 3)
ordinal_probs$R32 <- round(ordinal_probs$R32, 3)
ordinal_probs$S16 <- round(ordinal_probs$S16, 3)
ordinal_probs$E8 <- round(ordinal_probs$E8, 3)
ordinal_probs$F4 <- round(ordinal_probs$F4, 3)
ordinal_probs$`2ND` <- round(ordinal_probs$`2ND`, 3)
ordinal_probs$Champions <- round(ordinal_probs$Champions, 3)
ordinal_probs |>
subset(select = c(TEAM, R64, R32, S16, E8, F4, `2ND`, Champions))
ordinal_probs |>
subset(select = c(TEAM, R64, R32, S16, E8, F4, `2ND`, Champions)) |>
slice(1:10)
tibble(predict(sweet_sixteen_model, `2023stats`))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(prob = exp(predict(sweet_sixteen_model, `2023stats`)))
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(prob = exp(predict(sweet_sixteen_model, `2023stats`))) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(prob = exp(predict(sweet_sixteen_model, `2023stats`))/
(1 + exp(predict(sweet_sixteen_model, `2023stats`)))) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(prob = exp(predict(sweet_sixteen_model, `2023stats`))/
(1 + exp(predict(sweet_sixteen_model, `2023stats`)))) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
tibble(predict(sweet_sixteen_model, `2023stats`)) |>
mutate(prob = exp(predict(sweet_sixteen_model, `2023stats`))/
(1 + exp(predict(sweet_sixteen_model, `2023stats`)))) |>
mutate(rank = seq(1:64)) |>
left_join(mutate(`2023stats`, rank = seq(1:64))) |>
arrange(desc(predict(sweet_sixteen_model, `2023stats`)))
